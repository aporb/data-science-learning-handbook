FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies for CAC/PIV support
RUN apt-get update && apt-get install -y \
    pkg-config \
    libpcsclite-dev \
    pcscd \
    pcsc-tools \
    opensc \
    opensc-pkcs11 \
    libssl-dev \
    libffi-dev \
    build-essential \
    curl \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install additional CAC/PIV specific packages
RUN pip install --no-cache-dir \
    PyKCS11==1.5.12 \
    cryptography==41.0.7 \
    pycryptodome==3.19.0 \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    pydantic==2.5.0 \
    pyyaml==6.0.1 \
    requests==2.31.0 \
    python-multipart==0.0.6 \
    python-jose[cryptography]==3.3.0

# Copy application code
COPY security-compliance/auth/ /app/auth/
COPY security-compliance/auth/api/ /app/auth/api/
COPY security-compliance/auth/platform_adapters/ /app/auth/platform_adapters/

# Create configuration directories
RUN mkdir -p /app/config /app/logs /app/certs

# Copy default configuration files
COPY docker/cac-auth/config/ /app/config/

# Set up PCSC daemon for smart card support
RUN mkdir -p /var/run/pcscd

# Create non-root user for security
RUN useradd -r -s /bin/false -m -d /app cacauth && \
    chown -R cacauth:cacauth /app && \
    chmod +x /app/auth/api/auth_api.py

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start script
COPY docker/cac-auth/start.sh /app/start.sh
RUN chmod +x /app/start.sh

USER cacauth

CMD ["/app/start.sh"]